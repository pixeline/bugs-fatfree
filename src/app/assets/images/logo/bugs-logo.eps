%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.9.4 (Build 13E28) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 166 50
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 166 50
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.97077519 0.90723842 0.10946215 sc
q
0 50 m
166 50 l
166 0 l
0 0 l
h
0 50 m
W*
1.5390625 45.359375 m
21.414062 45.359375 l
24.72658 45.359375 27.269522 44.53907 29.042969 42.898438 c
30.816416 41.257805 31.703125 39.226574 31.703125 36.804688 c
31.703125 34.773426 31.070318 33.031258 29.804688 31.578125 c
28.960934 30.609369 27.72657 29.843752 26.101562 29.28125 c
28.570324 28.687496 30.386713 27.667976 31.550781 26.222656 c
32.714851 24.777336 33.296875 22.960949 33.296875 20.773438 c
33.296875 18.992178 32.882816 17.390633 32.054688 15.96875 c
31.226559 14.546868 30.093758 13.421879 28.65625 12.59375 c
27.765621 12.078122 26.421885 11.703126 24.625 11.46875 c
22.234364 11.156248 20.648441 11 19.867188 11 c
1.5390625 11 l
1.5390625 45.359375 l
h
60.445312 11 m
51.539062 11 l
51.539062 15.03125 l
50.21093 13.374991 48.871101 12.195316 47.519531 11.492188 c
46.167961 10.789059 44.507824 10.4375 42.539062 10.4375 c
39.914051 10.4375 37.855476 11.222649 36.363281 12.792969 c
34.871086 14.363289 34.125 16.781233 34.125 20.046875 c
34.125 35.890625 l
43.710938 35.890625 l
43.710938 22.203125 l
43.710938 20.640617 43.999996 19.531254 44.578125 18.875 c
45.156254 18.218746 45.968746 17.890625 47.015625 17.890625 c
48.156254 17.890625 49.08984 18.328121 49.816406 19.203125 c
50.542973 20.078129 50.90625 21.648426 50.90625 23.914062 c
50.90625 35.890625 l
60.445312 35.890625 l
60.445312 11 l
h
79.554688 35.890625 m
88.484375 35.890625 l
88.484375 12.382812 l
88.507812 11.28125 l
88.507812 9.7187424 88.175781 8.2304754 87.511719 6.8164062 c
86.847656 5.4023366 85.964851 4.2578168 84.863281 3.3828125 c
83.761711 2.5078082 82.363289 1.8750019 80.667969 1.484375 c
78.972649 1.0937481 77.031258 0.8984375 74.84375 0.8984375 c
69.843727 0.8984375 66.410164 1.64843 64.542969 3.1484375 c
62.675774 4.6484451 61.742188 6.6562376 61.742188 9.171875 c
61.742188 9.4843769 61.757812 9.9062471 61.789062 10.4375 c
71.046875 9.3828125 l
71.28125 8.5234327 71.640625 7.9296889 72.125 7.6015625 c
72.828125 7.1171851 73.71093 6.875 74.773438 6.875 c
76.148445 6.875 77.175781 7.2421837 77.855469 7.9765625 c
78.535156 8.7109413 78.875 9.992178 78.875 11.820312 c
78.875 15.59375 l
77.937492 14.484369 77.000008 13.67969 76.0625 13.179688 c
74.593742 12.398434 73.00782 12.007812 71.304688 12.007812 c
67.976547 12.007812 65.28907 13.460923 63.242188 16.367188 c
61.789055 18.429697 61.0625 21.156233 61.0625 24.546875 c
61.0625 28.421894 61.999992 31.37499 63.875 33.40625 c
65.750008 35.437511 68.20311 36.453125 71.234375 36.453125 c
73.171883 36.453125 74.769524 36.125004 76.027344 35.46875 c
77.285164 34.812496 78.46093 33.72657 79.554688 32.210938 c
79.554688 35.890625 l
h
78.578125 23.820312 m
78.578125 22.023428 78.96093 20.69141 79.726562 19.824219 c
80.492195 18.957027 81.499992 18.523438 82.75 18.523438 c
83.937508 18.523438 84.933586 18.972652 85.738281 19.871094 c
86.542976 20.769535 86.945312 22.12499 86.945312 23.9375 c
86.945312 25.75001 86.523445 27.136713 85.679688 28.097656 c
84.83593 29.058599 83.804695 29.539062 82.585938 29.539062 c
81.36718 29.539062 80.394531 29.09766 79.667969 28.214844 c
78.941406 27.332027 78.578125 25.867197 78.578125 23.820312 c
h
90.5625 17.890625 m
100.03125 18.78125 l
100.42188 17.656244 100.96875 16.851564 101.67188 16.367188 c
102.375 15.88281 103.31249 15.640625 104.48438 15.640625 c
105.76563 15.640625 106.75781 15.91406 107.46094 16.460938 c
108.00781 16.867189 108.28125 17.374996 108.28125 17.984375 c
108.28125 18.671879 107.92188 19.203123 107.20312 19.578125 c
106.6875 19.843752 105.32032 20.171873 103.10156 20.5625 c
99.789047 21.140629 97.488289 21.675779 96.199219 22.167969 c
94.910149 22.660158 93.824226 23.492182 92.941406 24.664062 c
92.058586 25.835943 91.617188 27.171867 91.617188 28.671875 c
91.617188 30.312508 92.093742 31.726557 93.046875 32.914062 c
94.000008 34.10157 95.312492 34.988277 96.984375 35.574219 c
98.656258 36.16016 100.89842 36.453125 103.71094 36.453125 c
106.6797 36.453125 108.87109 36.226566 110.28516 35.773438 c
111.69923 35.320309 112.8789 34.617191 113.82422 33.664062 c
114.76954 32.710934 115.55469 31.421883 116.17969 29.796875 c
107.13281 28.90625 l
106.89844 29.703129 106.50781 30.289061 105.96094 30.664062 c
105.21094 31.164064 104.3047 31.414062 103.24219 31.414062 c
102.16405 31.414062 101.37891 31.222658 100.88672 30.839844 c
100.39453 30.457029 100.14844 29.992189 100.14844 29.445312 c
100.14844 28.835934 100.46094 28.375002 101.08594 28.0625 c
101.71094 27.749998 103.0703 27.468752 105.16406 27.21875 c
108.33595 26.859373 110.6953 26.359379 112.24219 25.71875 c
113.78907 25.078121 114.97265 24.164068 115.79297 22.976562 c
116.61329 21.789057 117.02344 20.484383 117.02344 19.0625 c
117.02344 17.624992 116.58985 16.22657 115.72266 14.867188 c
114.85546 13.507806 113.48829 12.425785 111.62109 11.621094 c
109.7539 10.816402 107.21095 10.414062 103.99219 10.414062 c
99.44529 10.414062 96.207039 11.062493 94.277344 12.359375 c
92.347649 13.656257 91.109375 15.499988 90.5625 17.890625 c
90.5625 17.890625 l
h
90.5625 17.890625 m
W*
0 0 166 50 rc
-3.4609375 50.359375 m
122.02344 50.359375 l
122.02344 -4.1015625 l
-3.4609375 -4.1015625 l
h
-3.4609375 50.359375 m
f*
Q
0.22352941 0.25098041 0.30980393 sc
q
0 50 m
166 50 l
166 0 l
0 0 l
h
0 50 m
W*
9.074152 37.974724 m
19.430603 37.974724 l
21.309759 37.974724 22.839537 36.481918 22.839537 34.647018 c
22.839537 24.129154 l
22.839537 22.294256 21.309759 20.800928 19.430603 20.800928 c
15.359877 20.800928 l
15.359877 3.6260898 l
16.715744 3.1631997 17.694633 1.8807492 17.694633 0.37075889 c
17.694633 -3.3630826 l
17.694633 -5.2609844 16.149757 -6.8048191 14.252378 -6.8048191 c
12.354996 -6.8048191 10.811161 -5.2609844 10.811161 -3.3630826 c
10.811161 0.37075889 l
10.811161 1.8807492 11.789531 3.1631997 13.144877 3.6255691 c
13.144877 20.801449 l
9.074152 20.801449 l
7.1949949 20.801449 5.6652184 22.294777 5.6652184 24.129675 c
5.6652184 34.647537 l
5.6652184 36.481918 7.1944742 37.974724 9.074152 37.974724 c
9.074152 37.974724 l
h
13.026682 -3.3625619 m
13.026682 -4.038413 13.577047 -4.5882578 14.252378 -4.5882578 c
14.928749 -4.5882578 15.478073 -4.0378923 15.478073 -3.3625619 c
15.478073 0.37127957 l
15.478073 1.0471305 14.928749 1.5969752 14.252378 1.5969752 c
13.577047 1.5969752 13.026682 1.0471305 13.026682 0.37127957 c
13.026682 -3.3625619 l
13.026682 -3.3625619 l
h
7.8823009 30.457056 m
9.6896029 30.457056 l
9.6896029 32.40963 l
7.8823009 32.40963 l
7.8823009 30.457056 l
7.8823009 30.457056 l
h
11.430257 30.457056 m
13.381789 30.457056 l
13.381789 32.40963 l
11.430257 32.40963 l
11.430257 30.457056 l
11.430257 30.457056 l
h
13.381789 34.150284 m
13.381789 35.759205 l
11.430257 35.759205 l
11.430257 34.150284 l
13.381789 34.150284 l
13.381789 34.150284 l
h
15.122965 34.150284 m
17.075539 34.150284 l
17.075539 35.759205 l
15.122965 35.759205 l
15.122965 34.150284 l
15.122965 34.150284 l
h
15.122965 32.40963 m
15.122965 30.457056 l
17.075539 30.457056 l
17.075539 32.40963 l
15.122965 32.40963 l
15.122965 32.40963 l
h
18.815672 30.457056 m
20.624016 30.457056 l
20.624016 32.40963 l
18.815672 32.40963 l
18.815672 30.457056 l
18.815672 30.457056 l
h
20.623495 28.716402 m
18.815151 28.716402 l
18.815151 26.763828 l
20.623495 26.763828 l
20.623495 28.716402 l
20.623495 28.716402 l
h
17.075539 28.716402 m
15.122965 28.716402 l
15.122965 26.763828 l
17.075539 26.763828 l
17.075539 28.716402 l
17.075539 28.716402 l
h
15.122965 25.022652 m
15.122965 23.01697 l
17.075539 23.01697 l
17.075539 25.022652 l
15.122965 25.022652 l
15.122965 25.022652 l
h
13.381789 25.022652 m
11.430257 25.022652 l
11.430257 23.01697 l
13.381789 23.01697 l
13.381789 25.022652 l
13.381789 25.022652 l
h
13.381789 26.763828 m
13.381789 28.716402 l
11.430257 28.716402 l
11.430257 26.763828 l
13.381789 26.763828 l
13.381789 26.763828 l
h
9.6890821 28.716402 m
7.8817801 28.716402 l
7.8817801 26.763828 l
9.6890821 26.763828 l
9.6890821 28.716402 l
9.6890821 28.716402 l
h
7.8823009 34.647018 m
7.8823009 34.150284 l
9.6896029 34.150284 l
9.6896029 35.759205 l
9.074152 35.759205 l
8.4160042 35.759205 7.8823009 35.260387 7.8823009 34.647018 c
7.8823009 34.647018 l
h
19.430603 35.759205 m
18.815151 35.759205 l
18.815151 34.150284 l
20.623495 34.150284 l
20.623495 34.647018 l
20.623495 35.260387 20.088751 35.759205 19.430603 35.759205 c
19.430603 35.759205 l
h
20.623495 24.129154 m
20.623495 25.022652 l
18.815151 25.022652 l
18.815151 23.01697 l
19.430603 23.01697 l
20.088751 23.01697 20.623495 23.515787 20.623495 24.129154 c
20.623495 24.129154 l
h
9.074152 23.01697 m
9.6896029 23.01697 l
9.6896029 25.022652 l
7.8823009 25.022652 l
7.8823009 24.129154 l
7.8823009 23.515787 8.4160042 23.01697 9.074152 23.01697 c
9.074152 23.01697 l
h
9.074152 23.01697 m
W*
0 0 166 50 rc
27.839537 42.974724 m
0.66521847 42.974724 l
0.66521847 -11.804819 l
27.839537 -11.804819 l
h
27.839537 42.974724 m
f*
ep
end
%%Trailer
%%EOF
